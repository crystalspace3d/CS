@node C#/.Net Bindings, Perl Bindings, Java Bindings, Scripting Languages
@subsection C#/.Net Bindings
@cindex C#
@cindex .Net
@cindex Scripting, C#

@noindent
@emph{Written by Eric Sunshine, @email{sunshine@@sunshineco.com}}.

Crystal Space is accesible by the .Net Framework or other implementations as
Mono using the C#/.Net bindings, which exposes a set the classes under the 
CrystalSpace namespace.

The bindings are composed by the assembly @file{crystalspace-dotnet.dll},
and some shared libraries. All the components are placed under the
@samp{out/<insert your OS>/optimize/bindings/csharp} directory when there are
built.

There is a sample program which shows how to utilize Crystal Space from C#
under the @samp{scripts/csharp} folder.

This module only can be built using jam or ``make''to build Crystal Space. To
build this module, use the following instructions:
@enumerate
@item
Install Swig.

@noindent
@uref{http://www.swig.org/}

@item
Install the .Net Framework @sc{sdk} and add it to your @samp{PATH} environment
variable. If you aren't using MS Windows, you can use Mono:

@noindent
@uref{http://www.microsoft.com/downloads/details.aspx?familyid=fe6f2099-b7b4-4f47-a244-c96d69c35dec}

@noindent
@uref{http://www.go-mono.com/mono-downloads/download.html}

@item
Install NAnt, a ``make'' like tool for C#/.Net programs. You must make sure
that the @samp{nant} command is found in your @samp{PATH} environment variable.

@noindent
@uref{http://nant.sourceforge.net/}

@item
Install Perl, it is used for process some generated C# files. You, like with
the other tool, must make that the @samp{perl} command is found in your
@samp{PATH} environment variable.

@noindent
@uref{http://www.perl.com/download.csp}

@item
Configure Crystal Space using the @samp{--with-dotnet} option, e.g:
@samp{./configure --with-dotnet}
The configure scripts performs all the necessary checks, and perform an
``if the .Net tools are usable'' check.

@item
Build an optionally install Crystal Space. The C#/.Net bindings will be built
along ith the rest of the project.
@end enumerate

Once Crystal Space is built and optionally installed, you can use the bindings
in your programs. To do so, you have the following methods:

If you are using Windows, you can copy the files under the
@samp{out/*/*/bindings/csharp} folder into your application folder and add a
reference to the @samp{crystalspace-dotnet.dll} to your project. You must add
your Crystal Space folder into your, otherwise you will get ``dlls not founds''
errors when your run your program.

If your aren't using Window, you have two methods. If you have installed
Crystal Space, you can add @samp{pkg-config --libs crystalspace-dotnet} to
the compiler line, or you can add @samp{pkg:crystalspace-dotnet} if your are
using Mono, for example to compile the sample you can use:

@example
csc `pkg-config --libs crystalspace-dotnet` -target:exe -out:SimpleRoom.exe SimpleRoom.cs
Or if your are using Mono, use this:
gmcs pkg:crystalspace-dotnet -target:exe -out:SimpleRoom.exe SimpleRoom.cs
@end example

If you are using MonoDevelop, it will simply recognize the package and you can
simply add reference to it.

The other option that you have is to copy the assembly and the shared
libraries, along with the file @file{crystalspace-dotnet.config} to your
project folder and add a reference to the @file{crystalspace-dotnet.dll}
assembly. When you run your program, you have to set the @samp{LD_LIBRARY_PATH}
environment variable on Unix, or your @samp{DYLD_LIBRARY_PATH} environment variable on
MacOS/X to the directories where are Crystal Space and the bindings shared
libraries.


