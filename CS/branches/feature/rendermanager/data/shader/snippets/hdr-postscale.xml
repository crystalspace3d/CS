<!--
  Copyright (C) 2008 by Frank Richter

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<snippet>
  <technique priority="100">
    <combiner name="cg" plugin="crystalspace.graphics3d.shader.combiner.glcg" />
    
    <input name="a" type="rgba" />
    <input name="hdrScale" type="float2" default="complex" private="yes">
      <block location="shadervars">
	<shadervar name="hdr scale" type="vector2">1,1</shadervar>
      </block>
      <block location="cg:vertexIn">
	<uniform type="float2" name="hdrScale" />
      </block>
      <block location="cg:vertexMain">
	hdrScale = vertexIn.hdrScale;
      </block>
      <block location="cg:fragmentIn">
	<uniform type="float2" name="hdrScale" />
      </block>
      <block location="cg:fragmentMain">
	hdrScale = fragmentIn.hdrScale;
      </block>
      <block location="cg:variablemap">
	 <variablemap variable="hdr scale" destination="vertexIn.hdrScale" assumeconst="yes" />
	 <variablemap variable="hdr scale" destination="fragmentIn.hdrScale" assumeconst="yes" />
      </block>
    </input>
      
    <block location="cg:fragmentMain">
      result = float4 (a.rgb*hdrScale.y, a.a);
    </block>

    <block location="cg:vertexMain">
      result = float4 (a.rgb*hdrScale.y, a.a);
    </block>
    
    <output name="result" type="rgba" />
  </technique>
</snippet>
