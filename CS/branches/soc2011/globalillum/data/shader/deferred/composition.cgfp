<include>

<variablemap variable="viewport size" destination="ViewportSize" />
<variablemap variable="debug show ambocc" destination="ShowAO" />
<variablemap variable="debug show globalillum" destination="ShowGlobalIllum" />

<program>

<![CDATA[

const float EPSILON = 0.001f;

struct vertex2fragment 
{
  float2 TexCoord : TEXCOORD0;
  float4 ScreenPos : TEXCOORD1;
};

float4 main(vertex2fragment IN,            
            uniform sampler2D DiffuseBuffer,
            uniform sampler2D NormalBuffer,
            uniform sampler2D AmbientBuffer,            
            uniform sampler2D DirectRadianceBuffer,
            uniform sampler2D GlobalIllumBuffer,        
            uniform float4 ViewportSize, // (width, height, 1/width, 1/height)
            uniform int ShowAO,
            uniform int ShowGlobalIllum) : COLOR
{	
  float2 texCoord = IN.TexCoord;
  
  float3 directRadiance = tex2D (DirectRadianceBuffer, texCoord).rgb;  
  float3 diffuseColor = tex2D (DiffuseBuffer, texCoord).rgb;  
  float3 ambientColor = tex2D (AmbientBuffer, texCoord).rgb;  
  
  float4 radiance = tex2D (GlobalIllumBuffer, texCoord);
  float AO = radiance.a;

]]>
<?if vars."debug show ambocc".int != 0 ?>
    return float4 (AO);
<?elsif vars."debug show globalillum".int != 0 ?>
    return float4 (radiance.rgb, 1.0f);
<?endif?>
<![CDATA[
    // AO affects only ambient light
    return float4 (directRadiance + (diffuseColor * ambientColor * AO) + radiance.rgb, 1.0f);
    
    // AO affects ambient and direct light
    //return float4 ((directRadiance + diffuseColor * ambientColor) * AO + radiance.rgb, 1.0f);
}

]]>
</program>
</include>