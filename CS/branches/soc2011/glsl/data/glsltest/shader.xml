<shader compiler="xmlshader" name="glslshader">

  <technique priority="200">
    <pass>

      <buffer source="texture coordinate" destination="gl_MultiTexCoord0"/>
      <texture name="tex diffuse" destination="texdiff"/>

      <shader plugin="glsl">
        <vp>
          <program>
            <![CDATA[
              void main (void)
              {
                gl_TexCoord[0] = gl_MultiTexCoord0;
                gl_Position = ftransform ();
              }
            ]]>
          </program>
        </vp>

        <fp>
          <variablemap destination="coeff" type="vector3">
            <![CDATA[1.0,1.0,0.1]]>
          </variablemap>

          <program>
            <![CDATA[
              uniform vec3 coeff;
              uniform sampler2D texdiff;

              void main (void)
              {
                vec4 col = texture2D (texdiff, gl_TexCoord[0].xy);
                gl_FragColor = col * vec4 (coeff, 0.0);
              }
            ]]>
          </program>
        </fp>
      </shader>

    </pass>
  </technique>

  <technique priority="100">
    <pass>

      <buffer source="texture coordinate" destination="IN.texCoord"/>
      <texture name="tex diffuse" destination="textureDiffuse"/>

      <vp plugin="glcg">
        <cgvp>
          <program>
            <![CDATA[
                     struct App2Vertex
                     {
                       float4 Position : POSITION;
                       float2 texCoord;
                     };
                     
                     struct Vertex2Fragment
                     {
                       float4 Position : POSITION;
                       float2 texCoord;
                     };

                     Vertex2Fragment
                       main (App2Vertex IN,
                             uniform float4x4 ModelViewProj : state.matrix.mvp)
                     {
                       Vertex2Fragment OUT;
                       OUT.Position = mul (ModelViewProj, IN.Position);
                       OUT.texCoord = IN.texCoord;
                       return OUT;
                     }
            ]]>
          </program>
        </cgvp>
      </vp>

      <fp plugin="glcg">
        <cgfp>
          <program>
            <![CDATA[
                     struct Vertex2Fragment
                     {
                       float4 Position : POSITION;
                       float2 texCoord;
                     };

                     float4 main (Vertex2Fragment IN, sampler2D textureDiffuse) : COLOR
                     {
                       return tex2D (textureDiffuse, IN.texCoord);
                     }
            ]]>
          </program>
        </cgfp>
      </fp>

    </pass>
  </technique>
</shader>
