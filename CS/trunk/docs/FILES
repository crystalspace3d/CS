Here is a short list of all directories and what you can find
there:

+- [mk]			Unix, DOS, OS/2 makefile system
|  \- [system]
+- [visualc]		Visual C++ project files
+- [be_proj]		BeOS project files
+- [mwcw]		Macintosh project files
+- [include]		Common include files (COM interfaces)
+- [libs]		All components and/or libraries in CS
|  +- [csengine]	The 3D engine itself
|  +- [cs2d]		2D display drivers (X11, DirectX, Dive, Allegro, ...)
|  +- [cs3d]		3D rasterizers (software, Direct3D, OpenGL, Glide)
|  +- [cssys]		System dependent stuff (Unix, Windows, OS/2, ...)
|  +- [csinput]		Input system
|  +- [csnetman]	Network managers (null, simple, ...)
|  +- [csnetdrv]	Network drivers (null, sockets, ...)
|  +- [cssndldr]	Sound loader library (WAV, IFF, ...)
|  +- [cssnddrv]	Sound drivers (null, OSS, Windows, Mac, ...)
|  +- [cssndrdr]	Sound renderers (null, software, eax, a3d, ds3d, ...)
|  +- [csws]		CS Window system
|  +- [csutil]		Various utilities (Archive class, ...)
|  +- [csgeom]		Geometry stuff (Matrix, vector, ...)
|  +- [csparser]	The world file loader for the engine
|  +- [csgfxldr]	Graphic loaders (JPG, GIF, TGA, BMP, PNG, ...)
|  +- [zlib]		ZLib
|  +- [libjpeg]		JPEG library
|  \- [libpng]		PNG library
+- [support]		Extra support stuff which can be used by the above libraries
|  +- [com]		COM source is required by all components above
|  +- [debug]		Debugging
|  +- [general]		Some general stuff
|  +- [gnu]		Some gnu functions missing on some platforms
|  +- [system]		System dependent stuff
+- [apps]		Applications using Crystal Space
|  +- [support]		Support stuff for those applications
|  +- [walktest]	WalkTest
|  +- [blocks]		3D Tetris
|  +- [simple]		Simple tutorial application
|  +- [csregsvr]	COM registration utility
|  +- [cswstest]	CS Window System test application
|  +- [mazed]		MazeD the level editor
|  \- [primedit]	Primitive editor (obsolete)
+- [docs]		Hand written documentation
+- [csapi]		API reference for Crystal Space
+- [csdoc]		Automatically generated documentation
+- [data]		Data files for CS
+- [contrib]		Contributed stuff
\- [bin]		Various scripting stuff




src
    This directory contains the source for Crystal Space.
    It has (almost) everything you need to compile and run Crystal Space.
    In 'src' there are seven directories for the seven different layers:

    - com		routines to emulate COM on non-Windows platforms
    - geometry		basic 3D and 2D geometry stuff
    - util		utility classes
	- gfx		graphics related utility classes
	- sound		sound related utility classes
	- input		input handling classes (system-independent)
	- gnu		some GNU code missing on some platforms
	- debug		code for debugging Crystal Space
    - engine		the portal based engine
	- basic		some imporant base classes for the engine
	- light		lighting system
	- objects	things and sprites
	- polygon	polygon related stuff
	- 2d		2D stuff (currently 2D sprites)
    - colldet		Collision detection code
    - render		the renderer
	- software	stuff for the software renderer
	- softw16	stuff for the 16-bit software renderer
	- softw32	stuff for the 32-bit software renderer
	- direct3d5	the Direct3D hardware accelerated version (DX5)
	- direct3d6	the Direct3D hardware accelerated version (DX6)
	- glide2	the Glide hardware accelerated version (version 2)
	- glide3	the Glide hardware accelerated version (version 3)
	- opengl	the OpenGL hardware accelerated version
    - sound		sound stuff
    - network		low-level networking system
    	- driver	networking drivers
	     - null	NULL driver (no functionality)
	     - sockets	BSD sockets driver
	- manager	networking managers
	     - null	NULL manager (no functionality)
	     - simple	Simple manager
    - scripts		scripting system
    - general		general Crystal Space stuff
	- mazed		Crystal Space level editor (unfinished work!)
	- primedit	primitive Crystal Space editor (very primitive)
	- walktest	Crystal Space test program
	- cswstest	test for CS Window System
	- simple	a simple example of a CS using program
	- blocks	3D Tetris style game called Blocks.
	- csregsvr	the COM registration utility for non-Windows platforms
	- loader	everything for loading world files for CS
    - system		system dependent stuff
    	- ...		various directories for each system supported by CS
    - csws		the CS window system (used by MazeD)
    - visualc		project files for Visual C++ (Windows)
    - mwcw		project files for Macintosh
    - mk		makefiles for GNU make (Unix, DOS, BeOS, OS/2, ...)

    - out		output directory for object files
    	- SOLARIS	Solaris object files
	- DOS		DOS object files
	- LINUX		Linux object files
	- ...

data
    Data directory for the Crystal Space executable. Here are all the
    levels that you can try (every level is a ZIP file).
    'large.zip' is the default level (see 'cryst.cfg').

csdoc
    Automatically generated documentation. This documentation is generated
    directly from the source code using Doc++. Open 'aindex.html' as the
    starting page for this documentation.

zlib
    A compression/decompression library. This is a seperate product
    from Crystal Space. You need to compile it first before trying
    to compile Crystal Space.
    There is a configure script that you can run.

libpng
    A library for reading PNG files. Normally Crystal Space requires this
    although you can disable it in 'cs.mak'. Compile this before
    compiling Crystal Space but after compiling zlib.
    Choose the right makefile for compiling.

libjpeg
    A library for reading JPEG files. Normally Crystal Space requires this
    allthough you can disable it in 'cs.mak'. Compile this before
    compiling Crystal Space.
    There is a configure script that you can run.

contrib
    Contributed code and utilities related to Crystal Space.

    - config
	This is a utility for easier editing of the 'cryst.cfg'
	file. It is currently for Windows and DOS only.

    - 3ds
	A very primitive reader for 3DS files which outputs a format
	that can be read by Crystal Space. It can serve as a primitive
	convertor for 3DS files to Thing's. However it is only a very
	basic tool currently.

    - cs2vrml
	A tool to convert CS world files to VRML files. This tool only
	works with world files which use the SECTOR/THING interface
	(not the ROOM/SIXFACE interface). Currently only room.zip and
	maze.zip use that interface.
	This tool is written in JAVA. Source is not yet included.

    - mdl2spr
	A tool to convert Quake MDL sprites to CS format.

    - md22spr
	A tool to convert Quake II MD2 sprites to CS format.

    - binutils
	This directory contains a patch for GAS 2.8.1 (Linux) so that
	it properly recognizes MMX instructions.

    - doom2cs
    	JAVA utility to convert DOOM levels to CS.

    - ddg
    	DDG toolkit (Digital Dawn Toolkit). Intented mostly as a testbed
	for the upcoming ROAM implementation in CS.

    - varia
	Here you can find contributed source code which has not
	yet been integrated into Crystal Space.
	- File.zip		Graphics file loading routines.
	- Mixing.zip		Soundblaster library.
	- vm2.zip		Virtual machine for scripting.
	- dj_joy.c		Joystick example code for DJGPP (DOS).
	- lin_joy.cpp		Joystick example code for Linux.
	- wcc_joy.*		Joystick example code for Watcom (DOS).

    - wcc_make.tgz
        This archive contains two fixed makefiles for zlib and libpng
        for Watcom.

docs
    Various documents describing Crystal Space and general
    mathematical stuff.

    - document.txt (RECOMMENDED READING!)
	Document describing how Crystal Space works in general with
	an introduction to portal rendering.

    - config.txt
	An explanation about all configuration file options ('cryst.cfg').

    - console.txt
	An explanation about all console commands.

    - keys.txt
	An explanation about all keys that you can use while the engine
	is running.

    - display.txt
	A small document explaining all the different Crystal Space display
	and texture modes.

    - cam_matr.txt
	Technical document describing how camera transformation
	works in Crystal Space.

    - texmap.txt
	Technical document on how the texture mapping equations work
	inside Crystal Space.

    - warping.txt
	Technical document on how space warping and mirrors work.

    - lighting.txt
	Short explanation about how static lighting works in Crystal Space.

    - history.txt
	The developers history. What and when was this feature introduced
	and when was that bug fixed?

    - interface_cpp.txt
    - interface_h.txt
	Example code for porting to a new system (a bit outdated now).

    - light.txt
	Some ideas for dynamic lighting (not implemented in Crystal
	Space).

    - scripting.txt
	A proposal for a general scripting language system (this has
	more or less been implemented).

    - walkthru.txt
	A walk through of the rendering code. To make things easier if
	you want to learn how Crystal Space works.

    - whatsnew.txt
	What's new from 0.05 to 0.06 (see the history for things that
	have changed in beta 0.07).

    - worldfmt.txt
	First try at making a document for the world format. This
	file contains a syntax with very little explanation and a list
	of hints.

    - faq.html
	General questions.

    - todo.html
	What still needs to be done. If you're bored, why not read this
	file and try to fix all the things in there :-)

    - who.html
	Who is doing what. Always check this file before you start doing
	something (if 'something' has to do with Crystal Space of
	course :-)

    - csws.html
	Documentation about the Crystal Space Windowing System which is used
	by the MazeD editor.

    - os2notes.html
	Specific documentation about Crystal Space on OS/2.

    - primedit.txt
	Documentation for the primitive editor.

    - blocks.txt
	Documentation for the Blocks game.

attic
    This directory contains old code and algorithms which
    I find interesting but are not used (any more) by Crystal
    Space. I don't like to throw it away though. It may come in
    handy later.

