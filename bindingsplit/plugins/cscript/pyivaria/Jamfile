SubDir TOP plugins cscript pyivaria ;

if $(PYTHON.AVAILABLE) = "yes"
{
  #--------
  # Swig-generated files for ivaria.
  #--------
  local common = cs_ivaria.cpp ;
  local ivariapy = [ DoSourceGrist ivaria.py ] ;
  MakeLocate $(ivariapy) : $(LOCATE.TARGETS) ;

  if ! [ Property build : projgen ]
  {
    common = [ DoSourceGrist $(common) ] ;

    if $(CMD.SWIG)
    {
      Swig $(common) $(ivariapy) :
        [ DoSourceGrist ivaria.i ] :
        python :
	-c++ -shadow :
	[ ConcatDirs $(TOP) include ]
	[ ConcatDirs $(BUILDTOP) include ] :
	[ ConcatDirs $(TOP) include bindings ]
	[ ConcatDirs $(TOP) include bindings python ] :
	$(SEARCH_SOURCE) [ ConcatDirs $(TOP) scripts python ] :
	ivaria :
	[ on $(ivariapy) GetVar LOCATE ] ;
      Depends ivariapyclean : pythonswigclean ;
    }
    else
    {
      SEARCH on $(common) = $(SEARCH_SOURCE) ;
      local frozenpy = $(ivariapy:G=frozenivariapy) ;
      SEARCH on $(frozenpy) = [ ConcatDirs $(TOP) scripts python ] ;
      Copy $(ivariapy) : $(frozenpy) ;
      Depends $(ivariapy) : $(frozenpy) ;
    }
  }
  Clean ivariapyclean : $(ivariapy) ;
  Depends clean : ivariapyclean ;

  rule InstallCSCeguiPY
  {
    # Temporary SUBDIR override for InstallData.
    local SUBDIR = [ on $(<) GetVar LOCATE ] ;
    InstallData $(<) : $(>) ;
  }
  InstallCSCeguiPY $(ivariapy) : bindings python ;


  #--------
  # ivaria -- Pure Python module
  #--------
  PythMod ivariamod : _ivaria : 
	ivariamod.cpp cs_ivaria.cpp : 
	crystalspace : 
	: 
	"ivaria cs Python module" ;
  Depends ivariamod : $(ivariapy) ;
  CFlags ivariamod : $(COMPILER.C++FLAGS.STRICTALIASING.DISABLE) ;
}
