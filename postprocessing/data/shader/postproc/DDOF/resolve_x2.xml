<shader compiler="xmlshader" name="reduce">
  <technique priority="200">
    <pass>
      <buffer source="texture coordinate 0" destination="texture coordinate 0" />

	  <texture destination="g_TexY" name="tex color" />
	  <texture destination="g_TexABC" name="tex coef" />
      <fp plugin="glcg">
	<cgfp>
	  <variablemap variable="resolution" destination="g_Resolution" />
	  <variablemap variable="inv resolution" destination="g_InvResolution" />
	  <variablemap variable="pixel size" destination="g_InputInvRes" />
	  <program>

	      <![CDATA[



uniform sampler2D g_TexY;
uniform sampler2D g_TexABC;

float2 g_Resolution;
float2 g_InvResolution;


float4 main(float2 texUV: TEXCOORD0) : COLOR
{
	float3 abc1 = tex2D (g_TexABC, float2(0.25, texUV.y)).xyz;
	float3 abc2 = tex2D (g_TexABC, float2(0.75, texUV.y)).xyz;
	
	float3 y1 = tex2D (g_TexY, float2(0.25, texUV.y)).xyz;
	float3 y2 = tex2D (g_TexY, float2(0.75, texUV.y)).xyz;
	
	float inv_det = 1.0 / (abc1.y*abc2.y - abc1.z*abc2.x);
	float3 color;
	
	if ((texUV.x - g_InvResolution.x) < 0.0 )
		color = inv_det*(abc2.y*y1 - abc1.z*y2);
	else
		color = inv_det*(abc1.y*y2 - abc2.x*y1);
	
	return float4(color, 1.0);
}

	      ]]>

	  </program>
	</cgfp>
      </fp>
    </pass>
  </technique>
</shader>